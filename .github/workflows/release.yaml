name: Release
on:
  push:
    branches: [main]

jobs:
  get-next-version:
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npm ci && npx semantic-release --dry-run
        id: get-next-version
        env:
          GITHUB_TOKEN: ${{ secrets.HOMEPAGE_RELEASE_TOKEN }}
    
    outputs:
      is-new-release: ${{ steps.get-next-version.outputs.new-release-published }}
      version: ${{ steps.get-next-version.outputs.new-release-version }}

  release:
    runs-on: ubuntu-latest

    needs: get-next-version

    if: needs.get-next-version.outputs.is-new-release == 'true'

    permissions:
      contents: "read"
      id-token: "write"

    env:
      IMAGE: europe-west2-docker.pkg.dev/${{ secrets.PROJECT_ID }}/pauljs-io/homepage

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Authenticate with Google Cloud
        uses: "google-github-actions/auth@v0.8.3"
        with:
          workload_identity_provider: ${{ secrets.WI_PROVIDER }}
          service_account: ${{ secrets.GSA_REGISTRY }}

      - name: Authenticate Docker
        run: gcloud auth configure-docker europe-west2-docker.pkg.dev --quiet

      - name: Setup Docker BuildKit
        uses: docker/setup-buildx-action@v2

      - name: Build & Publish Image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.IMAGE }}:${{ needs.get-next-version.outputs.version }}
          cache-from: type=registry,ref=${{ env.IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE }}:buildcache,mode=max

      - name: Create GitHub Release
        run: npm ci && npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.HOMEPAGE_RELEASE_TOKEN }}

      - name: Update staging environment
        run: |
          curl -XPOST  \
            -H "Accept:application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.APPS_RELEASE }}" \
            -H "Content-Type:application/json" \
            https://api.github.com/repos/paulsilcock/app-of-apps/actions/workflows/deploy.yaml/dispatches \
            --data '{"ref": "main", "inputs": {"app": "homepage", "tag": "${{ needs.get-next-version.outputs.version }}", "env": "staging"} }'
          -H "Authorization: token $GH_TOKEN" \